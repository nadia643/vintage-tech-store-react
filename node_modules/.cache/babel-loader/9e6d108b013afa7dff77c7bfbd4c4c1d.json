{"ast":null,"code":"var _jsxFileName = \"/home/nadia/Projects/React Udemy Course/vintage-tech-store-react/src/pages/Login.js\";\nimport React, { useState, useContext } from \"react\"; // strapi function\n\nimport loginUser from \"../strapi/loginUser\";\nimport registerUser from \"../strapi/registerUser\"; // handle user\n\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from \"../context/user\";\nexport default function Login() {\n  const history = useHistory(); // setup user context\n\n  const value = useContext(UserContext);\n  console.log(value); // state values \n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"default\");\n  const [isMember, setIsMember] = useState(true);\n  let isEmpty = !email || !password || !username;\n\n  const toggleMember = () => {\n    setIsMember(prevMember => {\n      console.log(prevMember);\n      let isMember = !prevMember;\n      isMember ? setUsername(\"default\") : setUsername(\"\");\n      return isMember;\n    });\n  };\n\n  const handleSubmit = async e => {\n    // alert\n    e.preventDefault();\n    let response;\n\n    if (isMember) {\n      response = await loginUser({\n        email,\n        password\n      });\n    } else {\n      response = await registerUser({\n        email,\n        password,\n        username\n      });\n    }\n\n    if (response) {\n      console.log(\"success\");\n      console.log(response);\n    } else {/// show alert\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"form-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, isMember ? \"sign in\" : \"register\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), !isMember && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), isEmpty && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-empty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Please fill out all form fields\"), !isEmpty && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-block btn-primmary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"register-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, isMember ? \"need to register\" : \"already a member\", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: toggleMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Click here\"))));\n}","map":{"version":3,"sources":["/home/nadia/Projects/React Udemy Course/vintage-tech-store-react/src/pages/Login.js"],"names":["React","useState","useContext","loginUser","registerUser","useHistory","UserContext","Login","history","value","console","log","email","setEmail","password","setPassword","username","setUsername","isMember","setIsMember","isEmpty","toggleMember","prevMember","handleSubmit","e","preventDefault","response","target"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\n\n// strapi function\nimport loginUser from \"../strapi/loginUser\";\nimport registerUser from \"../strapi/registerUser\";\n\n// handle user\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from \"../context/user\";\n\nexport default function Login() {\n  const history = useHistory();\n  \n  // setup user context\n  const value = useContext(UserContext);\n  console.log(value);\n  \n  // state values \n  const [ email, setEmail] = useState(\"\");\n  const [ password, setPassword] = useState(\"\");\n  const [ username, setUsername] = useState(\"default\");\n  const [ isMember, setIsMember] = useState(true);\n\n  let isEmpty = !email || !password || !username;\n\n  const toggleMember = () => {\n    setIsMember((prevMember) => {\n      console.log(prevMember);\n      let isMember = !prevMember;\n      isMember ? setUsername(\"default\") : setUsername(\"\");\n      return isMember;\n      \n    })\n  }\n\n  const handleSubmit = async (e) => {\n    // alert\n    e.preventDefault();\n    let response;\n    if(isMember) {\n      response = await loginUser({ email, password })\n    }\n    else {\n      response = await registerUser({ email, password, username })\n    }\n    if(response) {\n      console.log(\"success\");\n      console.log(response);\n      \n      \n    }\n    else {\n      /// show alert\n    }\n  };\n\n\n  return (\n    <section className=\"form-section\">\n      <h2 className=\"section-title\">{ isMember ? \"sign in\" : \"register\" }</h2>\n      <form className=\"login-form\">\n\n        {/*  single input */}\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">Email</label>\n          <input \n            type=\"email\" \n            id=\"email\" \n            value={email} \n            onChange={e => setEmail(e.target.value)} />\n        </div>\n        {/*  end of single input */}\n\n                {/*  single input */}\n                <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input \n            type=\"password\" \n            id=\"password\" \n            value={password} \n            onChange={e => setPassword(e.target.value)} />\n        </div>\n        {/*  end of single input */}\n\n        {/*  single input */}\n        {/* only shows if is \"is not a member\" */}\n        {!isMember && (\n          <div className=\"form-control\">\n          <label htmlFor=\"username\">Username</label>\n          <input \n            type=\"text\" \n            id=\"username\" \n            value={username} \n            onChange={e => setUsername(e.target.value)} />\n        </div>\n        )}\n        \n        {/*  end of single input */}\n\n\n        {/* empty form text */}\n        {isEmpty && <p className=\"form-empty\">Please fill out all form fields</p>}\n\n        {/* submit btn  */}\n        {!isEmpty && (\n          <button \n            type=\"submit\" \n            className=\"btn btn-block btn-primmary\" \n            onClick={handleSubmit}\n            >\n              Submit\n              </button>\n        )}\n        {/* register link */}\n        <p className=\"register-link\">\n          {isMember ? \"need to register\" : \"already a member\"}\n          <button type=\"button\" onClick={toggleMember}>\n            Click here\n          </button>\n        </p>\n      </form>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}